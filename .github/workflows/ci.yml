name: CI Build

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

env:
  BUILD_CONFIGURATION: 'Debug'
  DEBUG: 'electron-builder' #Used to set electron-builder in debug mode to give us more verbose details when packaing:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Electron Builder uses GH_TOKEN env variable

jobs:
  ServerTests:
    name: .NET Core CLV Server exe Tests
    runs-on: windows-latest
    continue-on-error: false
    steps:
      - uses: actions/checkout@v2

      - name: Print ENV variables
        run: 'dir env:'

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Run .NET test
        run: dotnet test


  WinBuild:
    name: Build Windows Apps
    needs: [ServerTests]
    continue-on-error: false
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Make .NET Core Server excutable
        working-directory: LogViewer.Server
        run: dotnet publish --runtime win-x64 --output bin/dist/win

      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: npm install
        working-directory: LogViewer.Client
        run: npm install

      - name: Cache npm (Win) packages
        uses: actions/cache@v1
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-x-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-x-

      - name: Compile TypeScript
        working-directory: LogViewer.Client
        run: npx tsc --diagnostics true

      - name: Build electron apps Setup.exe & Windows-Store.appx
        working-directory: LogViewer.Client
        run: npm run win

      - name: Electron Builder Publish (Adds assets to draft release)
        working-directory: LogViewer.Client
        run: npm run publish

      - name: Upload Windows-Store.appx
        uses: actions/upload-artifact@v2
        with:
          name: Compact Log Viewer.appx
          path: output/*.appx

      - name: Upload Installer Setup.exe
        uses: actions/upload-artifact@v2
        with:
          name: Compact.Log.Viewer.Setup.exe
          path: output/Compact.Log.Viewer.Setup.*.exe

